# Compiler
NVCC ?= nvcc

ifndef GPU
GPU = B200
endif

TARGET = mk_llama
SRC    = llama.cu

# Python version configuration
ifndef PYTHON_VERSION
PYTHON_VERSION = 3.10
endif

# Default build type: Debug
BUILD_TYPE ?= Debug

# Base include paths
NVCCFLAGS_BASE = \
	--expt-extended-lambda \
	--expt-relaxed-constexpr \
	-Xcompiler=-Wno-psabi \
	-Xcompiler=-fno-strict-aliasing \
	-forward-unknown-to-host-compiler \
	-std=c++20 \
	-x cu \
	-I${THUNDERKITTENS_ROOT}/include \
	-I${MEGAKERNELS_ROOT}/include \
	$(shell python3 -m pybind11 --includes) \
	$(shell python3-config --ldflags) \
	-shared -fPIC -lpython${PYTHON_VERSION} \
	-lrt -lpthread -ldl -lcuda -lcudadevrt -lcudart_static -lcublas \
	-lineinfo

# Flags per build type
ifeq ($(BUILD_TYPE),Debug)
	NVCCFLAGS_BUILD = -g -O0 -Xptxas=-O0 --device-debug -G
else ifeq ($(BUILD_TYPE),RelWithDebInfo)
	NVCCFLAGS_BUILD = -O3 -g -lineinfo -DTORCH_USE_CUDA_DSA
else
	NVCCFLAGS_BUILD = -O3 -DNDEBUG --use_fast_math
endif

# GPU target
ifeq ($(GPU),4090)
	NVCCFLAGS_GPU = -DKITTENS_4090 -arch=sm_89
else ifeq ($(GPU),A100)
	NVCCFLAGS_GPU = -DKITTENS_A100 -arch=sm_80
else ifeq ($(GPU),H100)
	NVCCFLAGS_GPU = -DKITTENS_HOPPER -arch=sm_90a
else
	NVCCFLAGS_GPU = -DKITTENS_HOPPER -DKITTENS_BLACKWELL -arch=sm_100a
endif

# Final flags
NVCCFLAGS = $(NVCCFLAGS_BASE) $(NVCCFLAGS_BUILD) $(NVCCFLAGS_GPU)

# Default target
all: $(TARGET)

$(TARGET): $(SRC)
	$(NVCC) $(SRC) $(NVCCFLAGS) -o $(TARGET)$(shell python3-config --extension-suffix)

# Clean target
clean:
	rm -f $(TARGET)$(shell python3-config --extension-suffix)
